<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Istio on 老J的博客</title><link>https://blog.llaoj.cn/tags/istio/</link><description>Recent content in Istio on 老J的博客</description><generator>Hugo</generator><language>zh</language><lastBuildDate>Mon, 08 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.llaoj.cn/tags/istio/index.xml" rel="self" type="application/rss+xml"/><item><title>在istio service mesh中使用nginx反向代理</title><link>https://blog.llaoj.cn/posts/2208/istio-with-nginx-reserve-proxy/</link><pubDate>Mon, 08 Aug 2022 00:00:00 +0000</pubDate><guid>https://blog.llaoj.cn/posts/2208/istio-with-nginx-reserve-proxy/</guid><description>&lt;p>nginx反向代理的请求, 和我们直接请求有一定的区别, 比如:&lt;/p>
&lt;h2 id="http-version">http version&lt;/h2>
&lt;p>nginx proxy 发出的反向代理请求的http version默认是: 1.0, 但是istio支持1.1 &amp;amp; 2.0, 所以如果不增加http版本限制的话istio就无法进行报文解析, 也就无法应用istio-proxy(sidecar)L7层代理策略, 我们知道istio流量治理是基于L7层的.&lt;/p>
&lt;h2 id="http-header-host">http header: Host&lt;/h2>
&lt;p>有时候nginx发出的代理请求的http header中host的值, 不能保证是上游服务的host name. 在这种情况下, 是没办法匹配上游服务在istio-proxy中的L7流量治理的配置.&lt;/p></description></item></channel></rss>