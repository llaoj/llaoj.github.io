<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>istio on 老J的博客</title><link>https://blog.llaoj.cn/tags/istio/</link><description>Recent content in istio on 老J的博客</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 08 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.llaoj.cn/tags/istio/index.xml" rel="self" type="application/rss+xml"/><item><title>在istio service mesh中使用nginx反向代理</title><link>https://blog.llaoj.cn/posts/2208/istio-with-nginx-reserve-proxy/</link><pubDate>Mon, 08 Aug 2022 00:00:00 +0000</pubDate><guid>https://blog.llaoj.cn/posts/2208/istio-with-nginx-reserve-proxy/</guid><description>nginx反向代理的请求, 和我们直接请求有一定的区别, 比如:
http version # nginx proxy 发出的反向代理请求的http version默认是: 1.0, 但是istio支持1.1 &amp;amp; 2.0, 所以如果不增加http版本限制的话istio就无法进行报文解析, 也就无法应用istio-proxy(sidecar)L7层代理策略, 我们知道istio流量治理是基于L7层的.
http header: Host # 有时候nginx发出的代理请求的http header中host的值, 不能保证是上游服务的host name. 在这种情况下, 是没办法匹配上游服务在istio-proxy中的L7流量治理的配置.
怎么解决? # 所以, 需要在nginx代理配置处增加两项配置:
... location / { proxy_http_version 1.1; &amp;lt;- proxy_set_header Host &amp;lt;upstream-host&amp;gt;; &amp;lt;- proxy_pass http://&amp;lt;upstream-host&amp;gt;:8080; } ... 即可.
参考 # nginx官方文档proxy_http_version介绍 nginx官方文档proxy_set_header介绍</description></item></channel></rss>